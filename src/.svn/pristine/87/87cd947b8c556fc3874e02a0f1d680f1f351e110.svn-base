/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package RobotVision;

import ASIFT.ASIFTDescriptor;
import Utils.Image;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;

/**
 *
 * @author Danna
 */
public class ASIFTTest {

    public void transformImagesJpgToPng(String jpgImagesFolder, String pngImagesFolder) {

        File dir = new File(jpgImagesFolder);
        String[] children = dir.list();

        if (children != null) {

            for (int i = 0; i < children.length; i++) {

                String filename = children[i];

                if (filename.endsWith("jpg") || filename.endsWith("jpeg")) {
                    try {
                        
                        String name = filename.subSequence(0, filename.indexOf('.')).toString();
                        Image.saveAsPng(ImageIO.read(new File(jpgImagesFolder + filename)), pngImagesFolder + name + ".png");
                        
                        System.out.println(i + ". Processed image " + filename);

                    } catch (IOException ex) {
                        ex.getStackTrace();
                        System.out.println(ex.toString());
                    }
                }
            } 
        }
        else
            System.out.println("There are no images to transform in the folder you gave.");
            
    }
    
    public void computeASIFTFeatures(String inputPngFolder, String outputFeaturesFolder) {
       
        System.out.println("Started ASIFT feature extraction.");

        File dir = new File(inputPngFolder);
        String[] children = dir.list();

        if (children != null) {

            for (int i = 0; i < children.length; i++) {

                String filename = children[i];
                if (filename.endsWith("png")) {

                    String name = filename.subSequence(0, filename.indexOf('.')).toString();
                    long milis = System.currentTimeMillis();
                    ASIFTDescriptor.getDescriptor(inputPngFolder + filename, outputFeaturesFolder + name + ".asift");

                    System.out.println(i + ". " + "Computed asift features for " + filename + " in " + (System.currentTimeMillis() - milis)/1000 % 60 + " seconds.");
                }
            } // for
        }

    }
}